//===========================================================
//
// マップに配置れている缶処理[mapobject_can.cpp]
// Author 大原怜将
//
//===========================================================
#include "mapobject_can.h"

//===========================================================
// コンストラクタ
//===========================================================
CMapObject_Can::CMapObject_Can()
{
}

//===========================================================
// コンストラクタ
//===========================================================
CMapObject_Can::CMapObject_Can(const char* aModelFliename, int nPriority) : CObjectX(aModelFliename, nPriority)
{
}

//===========================================================
// デストラクタ
//===========================================================
CMapObject_Can::~CMapObject_Can()
{
}

//===========================================================
// 初期化処理
//===========================================================
HRESULT CMapObject_Can::Init(void)
{
	CObjectX::Init();

	return S_OK;
}

//===========================================================
// 終了処理
//===========================================================
void CMapObject_Can::Uninit(void)
{
	CObjectX::Uninit();
}

//===========================================================
// 更新処理
//===========================================================
void CMapObject_Can::Update(void)
{
	CObjectX::Update();
}

//===========================================================
// 描画処理
//===========================================================
void CMapObject_Can::Draw(void)
{
	CObjectX::Draw();
}

//===========================================================
// 生成処理
//===========================================================
CMapObject_Can* CMapObject_Can::Create(const char* aModelFliename, int nPriority)
{
	CMapObject_Can* pCan = new CMapObject_Can(aModelFliename, nPriority);

	if (pCan != nullptr)
	{
		pCan->Init();
	}

	return pCan;
}
